on:
  release:
    types:
      - published
env:
  k8s_deployment_name: hp-web-app
  registry_image_name: docker.pkg.github.com/kalontech/handprinter-web-app/hp-web-app:${{ github.sha }}
  registry_url: docker.pkg.github.com
jobs:
  build-and-deploy:
    name: CI/CD
    runs-on: ubuntu-latest
    steps:
    - name: Clone a repository
      uses: actions/checkout@master
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install app dependencies
      run: npm ci
    - name: Run ESLint tests
      run: npm run eslint
    - name: Build app (optimized production build)
      run: |
        npm run build
    - name: Build and push Docker image
      run: |
        docker login --username ${{ secrets.registry_username }} --password ${{ secrets.registry_password }} ${{ env.registry_url }}
        docker build . --tag ${{ env.registry_image_name }}
        docker push ${{ env.registry_image_name }}
    - name: Deploy to test
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.k8s_config_base64 }}
      if: contains(github.ref, 'test')
      with:
        args: set image --namespace test --record deployments/${{ env.k8s_deployment_name }} ${{ env.k8s_deployment_name }}=${{ env.registry_image_name }}
    - name: Deploy to staging
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.k8s_config_base64 }}
      if: contains(github.ref, 'staging')
      with:
        args: set image --namespace staging --record deployments/${{ env.k8s_deployment_name }} ${{ env.k8s_deployment_name }}=${{ env.registry_image_name }}
    - name: Deploy to production
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.k8s_config_base64 }}
      if: contains(github.ref, 'v1')
      with:
        args: set image --namespace production --record deployments/${{ env.k8s_deployment_name }} ${{ env.k8s_deployment_name }}=${{ env.registry_image_name }}
