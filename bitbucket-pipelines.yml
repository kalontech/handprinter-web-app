definitions:
  anchors:
    install-and-configure-kubectl: &install-and-configure-kubectl |
      curl -X GET -H "Content-Type: application/json" -H "Authorization: Bearer $DO_ACCESS_TOKEN" "https://api.digitalocean.com/v2/kubernetes/clusters/$DO_K8S_CLUSTER_ID/kubeconfig" > ~/.kube/config
      kubectl config use-context $DO_K8S_CLUSTER_NAME
  services:
    docker:
      memory: 2048
  steps:
    - test: &test
        image: node:alpine
        name: Test
        script:
          - npm install
          - npm test
    - deploy-docker-image: &deploy-docker-image
        name: Deploy Docker image
        script:
          - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          - docker build -t $DOCKER_IMAGE_NAME:$BITBUCKET_COMMIT .
          - docker push $DOCKER_IMAGE_NAME:$BITBUCKET_COMMIT
        services:
          - docker
    - deploy-to-production: &deploy-to-production
        deployment: production
        image: google/cloud-sdk:latest
        name: Deploy to production
        script:
          - *install-and-configure-kubectl
          - kubectl set image deployment/$DO_K8S_DEPLOYMENT_NAME $DO_K8S_DEPLOYMENT_IMAGE_NAME=$DOCKER_IMAGE_NAME:$BITBUCKET_COMMIT
        services:
          - docker
        trigger: manual
    - deploy-to-staging: &deploy-to-staging
        deployment: staging
        image: google/cloud-sdk:latest
        name: Deploy to staging
        script:
          - *install-and-configure-kubectl
          - kubectl set image deployment/$DO_K8S_DEPLOYMENT_NAME $DO_K8S_DEPLOYMENT_IMAGE_NAME=$DOCKER_IMAGE_NAME:$BITBUCKET_COMMIT
        services:
          - docker
    - deploy-to-test: &deploy-to-test
        deployment: test
        image: google/cloud-sdk:latest
        name: Deploy to test
        script:
          - *install-and-configure-kubectl
          - kubectl set image deployment/$DO_K8S_DEPLOYMENT_NAME $DO_K8S_DEPLOYMENT_IMAGE_NAME=$DOCKER_IMAGE_NAME:$BITBUCKET_COMMIT
        services:
          - docker
        trigger: manual
pipelines:
  default:
    - step: *test
  branches:
    master:
      - step: *test
      - step: *deploy-docker-image
      - step: *deploy-to-staging
      - step: *deploy-to-production
    feature/*:
      - step: *test
      - step: *deploy-docker-image
      - step: *deploy-to-test
